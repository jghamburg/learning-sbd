Listing 8.3  Tests verifying that addresses meet boundary conditions
import static org.apache.commons.lang3.StringUtils.repeat;
import static org.junit.Assert.assertEquals;
import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.DynamicTest.dynamicTest;
 
class EmailAddressTest {
   @TestFactory
   Stream<DynamicTest> should_be_accepted() {
      return Stream.of(
            "aa@hospital.com",                     
            repeat("X", 64) + "@hospital.com")     
            .map(input -> dynamicTest("Accepted: " + input,
              () -> assertDoesNotThrow(() -> new EmailAddress(input))));
   }
 
   @TestFactory
   Stream<DynamicTest> should_be_rejected() {
      return Stream.of(
         "a@hospital.com",                         
         repeat("X", 64) + "@something.com",                   
         repeat("X", 65) + "@hospital.com",        
         "address_with_invalid_char@hospital.com", 
         "jane@doe@hospital.com",                  
         "jane.doe@hospital.se",                   
         "jane.doe@subdomain.hospital.com",        
         ".jane@hospital.com",                     
         "jane.@hospital.com",                     
         "jane.a.doe@hospital.com")                
         .map(input ->
             dynamicTest("Rejected: " + input,
                () -> assertThrows(                
                         IllegalArgumentException.class,
                         () -> new EmailAddress(input))));
   }
}

